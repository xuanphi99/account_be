components:
    responses:
        # Descriptions of common responses
        BadRequestException:
            description: Request body not meet require
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        NotAuthorizedException:
            description: Authentication failure
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        ForbiddenException:
            description: Not permitted to access
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        NotFoundException:
            description: The specified resource was not found
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        NotAllowedException:
            description: HTTP method not supported
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        NotAcceptableException:
            description: Client media type requested not supported
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        NotSupportedException:
            description: Client posted media type not supported
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        InternalServerErrorException:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
        ServiceUnavailableException:
            description: Server is temporarily unavailable or busy
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Error"
    schemas:
        Account:
            description: A very simple account
            properties:
                accountId:
                    type: "integer"
                    format: "int64"
                fullName:
                    type: "string"
                email:
                    type: "string"
                newUser:
                    type: "string"
                password:
                    type: "string"
                phone:
                    type: "string"
                departmentId:
                    type: "integer"
                    format: "int64"
                positionId:
                    type: "integer"
                    format: "int64"
                userIdMapping:
                    type: "integer"
                roles:
                    type: "string"
                    description: "Role account"
                    enum:
                        - "ADMIN"
                        - "USER"
                        - "Team OWner"
                        - "DEPT OWNER"

                categories:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Category'

                categoryDepartment:
                    type: "object"
                    $ref: '#/components/schemas/Category'
                categoryPosition:
                    type: "object"
                    $ref: '#/components/schemas/Category'

            type: object

        Category:

            description: A very simple category
            properties:
                categoryId:
                    type: "integer"
                    format: "int64"

                type:
                    type: "string"
                    description: "type category"

                name:
                    type: "string"
                    description: "Name Type of category"

                code:
                    type: "integer"
                    description: "Name Type of category"

                parentId:
                    type: "string"
                    description: "Name Type of category"


            type: object


        Error:
            type: object
            properties:
                status:
                    format: int64
                    readOnly: true
                    type: integer
                    example: 401
                code:
                    type: string
                    example: DOGOO-100
                message:
                    type: string
                developerMessage:
                    type: string
            required:
                - code
                - message
info:
    description: "AccountRestBuilder REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "AccountRestBuilder"
    version: v1.0
openapi: 3.0.1
paths:
    "/accounts/{accountId}":
        get:
            operationId: getDetail
            summary: Get account by ID
            parameters:
                - in: path
                  name: accountId
                  description: Account ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    description: ""
                400:
                    $ref: "#/components/responses/BadRequestException"
                401:
                    $ref: "#/components/responses/NotAuthorizedException"
                403:
                    $ref: "#/components/responses/ForbiddenException"
                404:
                    $ref: "#/components/responses/NotFoundException"
                405:
                    $ref: "#/components/responses/NotAllowedException"
                406:
                    $ref: "#/components/responses/NotAcceptableException"
                415:
                    $ref: "#/components/responses/NotSupportedException"
                500:
                    $ref: "#/components/responses/InternalServerErrorException"
                503:
                    $ref: "#/components/responses/ServiceUnavailableException"
            tags: [ "Account" ]
        delete:
            operationId: deleteAccount
            summary: Delete Account by ID
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                204:
                    content:
                        application/json: { }
                        application/xml: { }
                    description: ""
                400:
                    $ref: "#/components/responses/BadRequestException"
                401:
                    $ref: "#/components/responses/NotAuthorizedException"
                403:
                    $ref: "#/components/responses/ForbiddenException"
                404:
                    $ref: "#/components/responses/NotFoundException"
                405:
                    $ref: "#/components/responses/NotAllowedException"
                406:
                    $ref: "#/components/responses/NotAcceptableException"
                415:
                    $ref: "#/components/responses/NotSupportedException"
                500:
                    $ref: "#/components/responses/InternalServerErrorException"
                503:
                    $ref: "#/components/responses/ServiceUnavailableException"
            tags: [ "Account" ]
        put:
            operationId: putAccount
            summary: Update Account by ID
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      type: integer
                      format: int64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    description: ""
                400:
                    $ref: "#/components/responses/BadRequestException"
                401:
                    $ref: "#/components/responses/NotAuthorizedException"
                403:
                    $ref: "#/components/responses/ForbiddenException"
                404:
                    $ref: "#/components/responses/NotFoundException"
                405:
                    $ref: "#/components/responses/NotAllowedException"
                406:
                    $ref: "#/components/responses/NotAcceptableException"
                415:
                    $ref: "#/components/responses/NotSupportedException"
                500:
                    $ref: "#/components/responses/InternalServerErrorException"
                503:
                    $ref: "#/components/responses/ServiceUnavailableException"
            tags: [ "Account" ]
    "/accounts":
        get:
            operationId: getAllAccount
            summary: Get list account
            description: Retrieves the pets. Results can be paginated, filtered, searched, and sorted.
            tags: [ "Account" ]
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    description: A paged array of pets
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                400:
                    $ref: "#/components/responses/BadRequestException"
                401:
                    $ref: "#/components/responses/NotAuthorizedException"
                403:
                    $ref: "#/components/responses/ForbiddenException"
                404:
                    $ref: "#/components/responses/NotFoundException"
                405:
                    $ref: "#/components/responses/NotAllowedException"
                406:
                    $ref: "#/components/responses/NotAcceptableException"
                415:
                    $ref: "#/components/responses/NotSupportedException"
                500:
                    $ref: "#/components/responses/InternalServerErrorException"
                503:
                    $ref: "#/components/responses/ServiceUnavailableException"
        post:
            operationId: addAccount
            summary: Add new Account

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    description: ""
                400:
                    $ref: "#/components/responses/BadRequestException"
                401:
                    $ref: "#/components/responses/NotAuthorizedException"
                403:
                    $ref: "#/components/responses/ForbiddenException"
                404:
                    $ref: "#/components/responses/NotFoundException"
                405:
                    $ref: "#/components/responses/NotAllowedException"
                406:
                    $ref: "#/components/responses/NotAcceptableException"
                415:
                    $ref: "#/components/responses/NotSupportedException"
                500:
                    $ref: "#/components/responses/InternalServerErrorException"
                503:
                    $ref: "#/components/responses/ServiceUnavailableException"
            tags: [ "Account" ]
